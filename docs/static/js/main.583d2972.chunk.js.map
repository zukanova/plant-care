{"version":3,"sources":["serviceWorker.js","components/Input.js","components/Todo.js","components/Separator.js","components/ProgressBar.js","components/Home.js","components/ToggleButton.js","components/Config.js","components/App.js","components/GlobalStyle.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Input","handleKeyUp","event","input","target","key","_this","props","onEnter","value","focus","react_default","a","createElement","onKeyUp","this","placeholder","Component","Wrapper","styled","section","withConfig","displayName","componentId","Todo","_this$props","text","onToggle","onDelete","done","className","onClick","background","Text","span","Line","div","width","Separator","Separator_Wrapper","height","percentage","Home","todos","load","addTodo","setState","id","uid","concat","Object","toConsumableArray","toggleTodo","index","findIndex","todo","slice","objectSpread","deleteTodo","renderSingleTodo","Todo_Todo","filter","map","Fragment","Separator_Separator","t","length","save","Home_Wrapper","ProgressBar","determineProgress","Input_Input","renderOpenTodos","showDoneTodos","renderDoneTodos","localStorage","setItem","JSON","stringify","parse","getItem","err","button","ToggleButton","isDefault","lastPropsIsDefault","handleToggle","defaultText","alternativeText","ToggleButton_Wrapper","Config","ToggleButton_ToggleButton","App","toggleShowDoneTodos","_this2","BrowserRouter","App_Wrapper","Route","exact","path","render","Home_Home","Config_Config","NavLink","activeClassName","to","createGlobalStyle","_templateObject","ReactDOM","App_App","GlobalStyle","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.583d2972.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Input extends Component {\n  handleKeyUp = event => {\n    const input = event.target\n    if (event.key === 'Enter') {\n      this.props.onEnter(input.value)\n      input.value = ''\n      input.focus()\n    }\n  }\n\n  render() {\n    return <input onKeyUp={this.handleKeyUp} placeholder=\"Add to-do\" />\n  }\n}\n","import React, { Component } from 'react'\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.section`\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  background: linear-gradient(#ddd, #efefef, #eee);\n\n  .done {\n    text-decoration: line-through;\n  }\n`\n\nexport default class Todo extends Component {\n  render() {\n    const { text, onToggle, onDelete, done } = this.props\n\n    return (\n      <Wrapper>\n        <span className={done ? 'done' : ''} onClick={onToggle}>\n          {text}\n        </span>{' '}\n        <span onClick={onDelete}>&times;</span>\n      </Wrapper>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.section`\n  display: flex;\n  align-items: center;\n  background: ${props => props.background || 'white'};\n`\n\nconst Text = styled.span`\n  white-space: nowrap;\n`\n\nconst Line = styled.div`\n  width: 100%;\n  margin: 0 10px;\n  border-bottom: ${props => props.width || 4}px solid deeppink;\n`\n\nexport default class Separator extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Line width={2} />\n        <Text>{this.props.text}</Text>\n        <Line width={2} />\n      </Wrapper>\n    )\n  }\n}\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background: cornflowerblue;\n  height: ${props => props.height || 5}px;\n\n  &::after {\n    content: '';\n    height: ${props => props.height || 5}px;\n    display: block;\n    width: ${props => props.percentage * 100}%;\n    background: deeppink;\n    transition: width 0.3s ease;\n  }\n`\n","import React, { Component } from 'react'\nimport uid from 'uid'\nimport Input from './Input'\nimport Todo from './Todo'\nimport Separator from './Separator'\nimport ProgressBar from './ProgressBar'\n\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.section`\n  display: grid;\n  grid-template-rows: 4px 40px;\n  grid-auto-rows: 32px;\n`\n\nexport default class Home extends Component {\n  state = {\n    todos: this.load(),\n  }\n\n  addTodo = text => {\n    this.setState({\n      todos: [{ text, done: false, id: uid() }, ...this.state.todos],\n    })\n  }\n\n  toggleTodo = id => {\n    const { todos } = this.state\n    const index = todos.findIndex(todo => todo.id === id)\n    const todo = todos[index]\n\n    this.setState({\n      todos: [\n        ...todos.slice(0, index),\n        { ...todo, done: !todo.done },\n        ...todos.slice(index + 1),\n      ],\n    })\n  }\n\n  deleteTodo = id => {\n    const { todos } = this.state\n    const index = todos.findIndex(todo => todo.id === id)\n\n    this.setState({\n      todos: [...todos.slice(0, index), ...todos.slice(index + 1)],\n    })\n  }\n\n  renderOpenTodos() {\n    return this.state.todos\n      .filter(todo => !todo.done)\n      .map(this.renderSingleTodo)\n  }\n\n  renderDoneTodos() {\n    return (\n      <React.Fragment>\n        <Separator text=\"DONE\" />\n        {this.state.todos.filter(todo => todo.done).map(this.renderSingleTodo)}\n      </React.Fragment>\n    )\n  }\n\n  renderSingleTodo = todo => (\n    <Todo\n      key={todo.id}\n      text={todo.text}\n      done={todo.done}\n      onToggle={() => this.toggleTodo(todo.id)}\n      onDelete={() => this.deleteTodo(todo.id)}\n    />\n  )\n\n  determineProgress() {\n    const { todos } = this.state\n    const doneTodos = todos.filter(t => t.done)\n    return doneTodos.length / todos.length\n  }\n\n  render() {\n    this.save()\n\n    return (\n      <Wrapper>\n        <ProgressBar percentage={this.determineProgress()} />\n        <Input onEnter={this.addTodo} />\n        <Separator text=\"TODO\" />\n        {this.renderOpenTodos()}\n        {this.props.showDoneTodos && this.renderDoneTodos()}\n      </Wrapper>\n    )\n  }\n\n  save() {\n    localStorage.setItem('todo-app--todos', JSON.stringify(this.state.todos))\n  }\n\n  load() {\n    try {\n      return JSON.parse(localStorage.getItem('todo-app--todos')) || []\n    } catch (err) {\n      return []\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.button`\n  color: deeppink;\n  background: linear-gradient(#eee, #fff, #fff);\n\n  &.active {\n    color: white;\n    background: deeppink;\n  }\n`\n\nexport default class ToggleButton extends Component {\n  state = {\n    isDefault: this.props.isDefault == null ? true : this.props.isDefault,\n    lastPropsIsDefault: this.props.isDefault,\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const isTheSame = state.lastPropsIsDefault === props.isDefault\n\n    return isTheSame\n      ? null\n      : {\n          isDefault: props.isDefault,\n          lastPropsIsDefault: props.isDefault,\n        }\n  }\n\n  handleToggle = () => {\n    this.setState({\n      isDefault: !this.state.isDefault,\n    })\n    this.props.onClick()\n  }\n\n  render() {\n    const { defaultText, alternativeText } = this.props\n    const { isDefault } = this.state\n\n    return (\n      <Wrapper\n        className={isDefault ? '' : 'active'}\n        onClick={this.handleToggle}\n      >\n        {isDefault ? defaultText : alternativeText}\n      </Wrapper>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ToggleButton from './ToggleButton'\n\nexport default class Config extends Component {\n  render() {\n    const { showDoneTodos, onToggle } = this.props\n\n    return (\n      <section>\n        <h2>Config</h2>\n        <ToggleButton\n          defaultText=\"Hide done todos\"\n          alternativeText=\"Show done todos\"\n          isDefault={showDoneTodos}\n          onClick={onToggle}\n        />\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\nimport Home from './Home'\nimport Config from './Config'\n\nconst Wrapper = styled.section`\n  display: grid;\n  grid-template-rows: auto 50px;\n  height: 100vh;\n\n  nav {\n    display: flex;\n  }\n\n  a:any-link {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none;\n    color: black;\n    width: 100%;\n    background: #efefef;\n\n    &:first-child {\n      border-right: 1px solid white;\n    }\n\n    &.active {\n      background: deeppink;\n      color: white;\n    }\n  }\n`\n\nexport default class App extends Component {\n  state = {\n    showDoneTodos: true,\n  }\n\n  toggleShowDoneTodos = () => {\n    this.setState({\n      showDoneTodos: !this.state.showDoneTodos,\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <Wrapper>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Home showDoneTodos={this.state.showDoneTodos} />}\n          />\n          <Route\n            path=\"/config\"\n            render={() => (\n              <Config\n                showDoneTodos={this.state.showDoneTodos}\n                onToggle={this.toggleShowDoneTodos}\n              />\n            )}\n          />\n          <nav>\n            <NavLink exact activeClassName=\"active\" to=\"/\">\n              Home\n            </NavLink>\n            <NavLink activeClassName=\"active\" to=\"/config\">\n              Config\n            </NavLink>\n          </nav>\n        </Wrapper>\n      </Router>\n    )\n  }\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './components/App'\nimport GlobalStyle from './components/GlobalStyle'\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    <GlobalStyle />\n  </React.Fragment>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}